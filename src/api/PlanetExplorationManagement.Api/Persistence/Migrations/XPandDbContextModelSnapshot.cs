// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Context;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(XPandDbContext))]
    partial class XPandDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Planet", b =>
                {
                    b.Property<int>("PlanetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanetId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("PlanetId");

                    b.ToTable("Planets");

                    b.HasData(
                        new
                        {
                            PlanetId = 1,
                            CreatedAt = new DateTime(2021, 9, 24, 15, 10, 38, 421, DateTimeKind.Local).AddTicks(4501),
                            CreatedBy = 1,
                            Name = "TAU 23"
                        },
                        new
                        {
                            PlanetId = 2,
                            CreatedAt = new DateTime(2022, 4, 7, 15, 10, 38, 421, DateTimeKind.Local).AddTicks(4533),
                            CreatedBy = 2,
                            Name = "ZETTA 7"
                        },
                        new
                        {
                            PlanetId = 3,
                            CreatedAt = new DateTime(2022, 7, 15, 15, 10, 38, 421, DateTimeKind.Local).AddTicks(4534),
                            CreatedBy = 3,
                            Name = "SIGMA 17"
                        },
                        new
                        {
                            PlanetId = 4,
                            CreatedAt = new DateTime(2022, 10, 23, 15, 10, 38, 421, DateTimeKind.Local).AddTicks(4536),
                            CreatedBy = 3,
                            Name = "KAPPA 44"
                        },
                        new
                        {
                            PlanetId = 5,
                            CreatedAt = new DateTime(2023, 1, 31, 15, 10, 38, 421, DateTimeKind.Local).AddTicks(4537),
                            CreatedBy = 4,
                            Name = "RUKA 23"
                        });
                });

            modelBuilder.Entity("Domain.Entities.PlanetExploration", b =>
                {
                    b.Property<int>("PlanetExplorationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanetExplorationId"), 1L, 1);

                    b.Property<int?>("CaptainId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Observations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanetExplorationStatusId")
                        .HasColumnType("int");

                    b.Property<int>("PlanetId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("PlanetExplorationId");

                    b.HasIndex("PlanetExplorationStatusId");

                    b.HasIndex("PlanetId")
                        .IsUnique();

                    b.ToTable("PlanetExplorations");

                    b.HasData(
                        new
                        {
                            PlanetExplorationId = 1,
                            CaptainId = 1,
                            CreatedAt = new DateTime(2022, 1, 2, 15, 10, 38, 421, DateTimeKind.Local).AddTicks(4552),
                            CreatedBy = 1,
                            Observations = "While visiting this planet, the robots have uncovered various forms of life",
                            PlanetExplorationStatusId = 1,
                            PlanetId = 1
                        },
                        new
                        {
                            PlanetExplorationId = 2,
                            CaptainId = 2,
                            CreatedAt = new DateTime(2022, 5, 17, 15, 10, 38, 421, DateTimeKind.Local).AddTicks(4555),
                            CreatedBy = 2,
                            Observations = "0.2% nutrients in the soil. Unfortunately than cannot sustain life",
                            PlanetExplorationStatusId = 2,
                            PlanetId = 2
                        },
                        new
                        {
                            PlanetExplorationId = 3,
                            CreatedAt = new DateTime(2022, 7, 21, 15, 10, 38, 421, DateTimeKind.Local).AddTicks(4556),
                            CreatedBy = 3,
                            Observations = "No description yet :/",
                            PlanetExplorationStatusId = 4,
                            PlanetId = 3
                        },
                        new
                        {
                            PlanetExplorationId = 4,
                            CaptainId = 3,
                            CreatedAt = new DateTime(2022, 10, 29, 15, 10, 38, 421, DateTimeKind.Local).AddTicks(4558),
                            CreatedBy = 3,
                            Observations = "We've found another sapient species and have engaged in communication",
                            PlanetExplorationStatusId = 1,
                            PlanetId = 4
                        },
                        new
                        {
                            PlanetExplorationId = 5,
                            CaptainId = 4,
                            CreatedAt = new DateTime(2023, 2, 6, 15, 10, 38, 421, DateTimeKind.Local).AddTicks(4559),
                            CreatedBy = 4,
                            Observations = "Just a guge floating rock",
                            PlanetExplorationStatusId = 2,
                            PlanetId = 5
                        });
                });

            modelBuilder.Entity("Domain.Entities.PlanetExplorationRobot", b =>
                {
                    b.Property<int>("PlanetExplorationId")
                        .HasColumnType("int");

                    b.Property<int>("RobotId")
                        .HasColumnType("int");

                    b.HasKey("PlanetExplorationId", "RobotId");

                    b.ToTable("PlanetExplorationRobots");

                    b.HasData(
                        new
                        {
                            PlanetExplorationId = 1,
                            RobotId = 2011
                        },
                        new
                        {
                            PlanetExplorationId = 1,
                            RobotId = 315
                        },
                        new
                        {
                            PlanetExplorationId = 1,
                            RobotId = 72
                        },
                        new
                        {
                            PlanetExplorationId = 1,
                            RobotId = 345
                        },
                        new
                        {
                            PlanetExplorationId = 2,
                            RobotId = 21
                        },
                        new
                        {
                            PlanetExplorationId = 2,
                            RobotId = 88
                        },
                        new
                        {
                            PlanetExplorationId = 4,
                            RobotId = 33
                        },
                        new
                        {
                            PlanetExplorationId = 5,
                            RobotId = 18
                        },
                        new
                        {
                            PlanetExplorationId = 5,
                            RobotId = 74
                        },
                        new
                        {
                            PlanetExplorationId = 5,
                            RobotId = 88
                        },
                        new
                        {
                            PlanetExplorationId = 5,
                            RobotId = 203
                        },
                        new
                        {
                            PlanetExplorationId = 5,
                            RobotId = 507
                        });
                });

            modelBuilder.Entity("Domain.Entities.PlanetExplorationStatus", b =>
                {
                    b.Property<int>("PlanetExplorationStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PlanetExplorationStatusId");

                    b.ToTable("PlanetExplorationStatuses");

                    b.HasData(
                        new
                        {
                            PlanetExplorationStatusId = 1,
                            Label = "OK"
                        },
                        new
                        {
                            PlanetExplorationStatusId = 2,
                            Label = "!OK"
                        },
                        new
                        {
                            PlanetExplorationStatusId = 3,
                            Label = "TODO"
                        },
                        new
                        {
                            PlanetExplorationStatusId = 4,
                            Label = "En route"
                        });
                });

            modelBuilder.Entity("Domain.Entities.PlanetExploration", b =>
                {
                    b.HasOne("Domain.Entities.PlanetExplorationStatus", "PlanetExplorationStatus")
                        .WithOne()
                        .HasForeignKey("Domain.Entities.PlanetExploration", "PlanetExplorationStatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Planet", "Planet")
                        .WithOne("PlanetExploration")
                        .HasForeignKey("Domain.Entities.PlanetExploration", "PlanetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Planet");

                    b.Navigation("PlanetExplorationStatus");
                });

            modelBuilder.Entity("Domain.Entities.PlanetExplorationRobot", b =>
                {
                    b.HasOne("Domain.Entities.PlanetExploration", "PlanetExploration")
                        .WithMany("Robots")
                        .HasForeignKey("PlanetExplorationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PlanetExploration");
                });

            modelBuilder.Entity("Domain.Entities.Planet", b =>
                {
                    b.Navigation("PlanetExploration");
                });

            modelBuilder.Entity("Domain.Entities.PlanetExploration", b =>
                {
                    b.Navigation("Robots");
                });
#pragma warning restore 612, 618
        }
    }
}
